name: Daily Reading Companion

on:
  schedule:
    # Run daily at 9:00 AM UTC (adjust timezone as needed)
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  send-daily-reading:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # No external dependencies for this project
        
    - name: Create data directories
      run: |
        mkdir -p data/books data/backups logs
        
    - name: Set up configuration
      env:
        DAILY_READER_EMAIL: ${{ secrets.DAILY_READER_EMAIL }}
        DAILY_READER_SENDER_EMAIL: ${{ secrets.DAILY_READER_SENDER_EMAIL }}
        DAILY_READER_SENDER_PASSWORD: ${{ secrets.DAILY_READER_SENDER_PASSWORD }}
        DAILY_READER_READING_TIME: ${{ secrets.DAILY_READER_READING_TIME }}
      run: |
        # Configuration will be loaded from environment variables
        echo "Configuration loaded from environment variables"
        
    - name: Send daily reading email
      env:
        DAILY_READER_EMAIL: ${{ secrets.DAILY_READER_EMAIL }}
        DAILY_READER_SENDER_EMAIL: ${{ secrets.DAILY_READER_SENDER_EMAIL }}
        DAILY_READER_SENDER_PASSWORD: ${{ secrets.DAILY_READER_SENDER_PASSWORD }}
        DAILY_READER_ENABLE_EMAIL: "false"
        DAILY_READER_READING_TIME: ${{ secrets.DAILY_READER_READING_TIME || '10' }}
      run: |
        # Validate environment variables
        if [ -z "$DAILY_READER_EMAIL" ] || [ -z "$DAILY_READER_SENDER_EMAIL" ] || [ -z "$DAILY_READER_SENDER_PASSWORD" ]; then
          echo "‚ùå Missing required environment variables"
          echo "Required: DAILY_READER_EMAIL, DAILY_READER_SENDER_EMAIL, DAILY_READER_SENDER_PASSWORD"
          exit 1
        fi
        
        # Check if progress file exists
        if [ ! -f "data/progress.json" ]; then
          echo "‚ùå No progress file found - system needs initialization"
          echo "Run 'python3 -m src.main setup' and process a book first"
          exit 1
        fi
        
        # Find the current book and send daily reading
        CURRENT_BOOK=$(python3 -c "import json; import sys; progress = json.load(open('data/progress.json')); books = progress.get('books', {}); [print(name) or sys.exit(0) for name, data in books.items() if not data.get('completed', False)]; sys.exit(1)" 2>/dev/null)
        
        if [ $? -ne 0 ] || [ -z "$CURRENT_BOOK" ]; then
          echo "‚ùå No active books found or error reading progress"
          exit 1
        fi
        
        echo "üìñ Sending daily reading for: $CURRENT_BOOK"
        
        # Verify chunks file exists
        CHUNKS_FILE="data/${CURRENT_BOOK%.*}_chunks.json"
        if [ ! -f "$CHUNKS_FILE" ]; then
          echo "‚ùå Chunks file not found: $CHUNKS_FILE"
          echo "Book may need to be processed again"
          exit 1
        fi
        
        # Send daily reading
        if python3 -m src.main read "$CURRENT_BOOK" --send; then
          echo "‚úÖ Daily reading sent successfully"
        else
          echo "‚ùå Failed to send daily reading"
          exit 1
        fi
        
    - name: Commit progress updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/progress.json
        if git diff --staged --quiet; then
          echo "No progress changes to commit"
        else
          git commit -m "üìñ Daily reading progress update $(date +'%Y-%m-%d')"
          git push origin main
        fi
